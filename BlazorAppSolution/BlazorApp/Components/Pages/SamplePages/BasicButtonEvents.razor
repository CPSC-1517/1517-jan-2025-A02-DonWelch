@page "/basicevents"

<!-- this first PHYSICAL line on a page is the routing directive
     it contains the internal page name for use by the menu
     it is not case-sensitive, BUT spelling is important
-->
<!-- the PageTitle is where you will place the browser tab page title
    every page during this course MUST have a PageTitle as part of the class standards
-->
<PageTitle>Basic Events</PageTitle>

<!--
    The next line was introduced in .Net 8 core
    This line indicates the interactivity of the rendering mode
    We need it to make the buttons work on the page
-->
@rendermode InteractiveServer

<h1>Basic Button Events</h1>
<h4 style="color:blue;font-style:italic">Learning about buttons and events</h4>

<blockquote style="background-color:aquamarine">
    This page will demonstrate the basics of button events. It will use a &lt;input&gt; control
    to ask for some user input. It will use a &lt;button&gt; control to process the input.
    It will demonstrate basic use of C# code to do the processing.
</blockquote>

<!-- The component page has 2 environments: html and C#
    The current environment is dictated by the code that is executing
    You switch between environments by use of the "at" symbol
    The "at" symbol switching your environment to C#
    Any html code that is executed automatically returns you to the default enviromnment of Html

    the WelcomeMsg in the following paragraph is in the C# environment and is a variable.
-->
<p>@WelcomeMsg</p>

<!--
    the onclick parameter value is a method name in your C# code
    when the button is pressed by the user; the action is sent to the server via SignalR;
    the server starts to process the page; the event is excuted after the setup by the server
    of the page; after the action the page is re-rendered and returned to the browser as html
-->
<button type="submit" @onclick="OnClear">Clear</button>

<br/><br/>
<label for="inputcontrol">Enter an H for heads or T for tails:</label>
<input type="text" id="inputcontrol" placeholder="eg: H" @bind="inputValue" />
<button type="submit" @onclick="OnFlip" class="btn btn-outline-primary">Flip</button>

@code {
    //this code block is where your C# logic coding will be placed

    /*
    * the comment in the block as everything in this coding block is C#
    * the directive @code indicates the coding block
    */

    /*
    * vaiables tied to a control are created within the coding block
    * data is automatically moved between the control and the variable
    */
    private string WelcomeMsg = "";
    private string inputValue = "";

    //there are special events already created for the blazor component
    // one is the ability to execute code as the page is 1st created
    // the OnInitialized() method, is executed when the page is 1st created,
    //      IT DOES NOT EXECUTE AGAIN IF YOU REMAIN ON THE PAGE!!!
    // it can be used to place special messages on the appearence of a page
    //  or  initialize  variables on your page

    protected override void OnInitialized()
    {
        WelcomeMsg = "Let us get started";
        base.OnInitialized(); //Personally I do not remove this statement
    }

    private void OnClear()
    {
        WelcomeMsg = "You press the clear button";
    }

    private void OnFlip()
    {
        //this event will play the game heads (0) or tails (1)
        //the event will generate a random heads or tails value
        //  to compare to the entered value
        //display the results in the WelcomeMsg string.

        WelcomeMsg = ""; //empty out any old message 
                         //create random flip
        Random rnd = new Random();
        int flip = rnd.Next(0, 2); //generate a value of 0 or 1
        if (inputValue.ToUpper().Trim().Equals("H") ||
            inputValue.ToUpper().Trim().Equals("T"))
        {
            if (flip == 0)
            {
                //heads
                if (inputValue.ToUpper().Trim().Equals("H"))
                {
                    WelcomeMsg = "You guessed the computer flip. You win.";
                }
                else
                {
                    WelcomeMsg = "You did not guessed the computer flip. You lose.";
                }
            }
            else
            {
                //tails
                if (inputValue.ToUpper().Trim().Equals("T"))
                {
                    WelcomeMsg = "You guessed the computer flip. You win.";
                }
                else
                {
                    WelcomeMsg = "You did not guessed the computer flip. You lose.";
                }
            }
        }
        else
        {
            WelcomeMsg = "You did not enter an H or T";
        }
    }
}
